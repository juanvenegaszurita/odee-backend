// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int @id @default(autoincrement())
  name          String
  createdAt     DateTime @default(now())
  roles         Roles? @relation(fields: [roles_id], references: [id])
  roles_id      Int?
  business      Business[]
  email         String
  UID           String
}

model Roles {
  id            Int @id @default(autoincrement())
  description   String
  users         Users[]
}

model Business {
  id            Int @id @default(autoincrement())
  name          String
  business_name String
  rut           String @unique
  users         Users? @relation(fields: [users_id], references: [id])
  users_id      Int?
  clients       Clients[]
  address       String
}

model Clients {
  id            Int @id @default(autoincrement())
  name          String
  rut           String @unique
  address       String
  business      Business? @relation(fields: [business_id], references: [id])
  business_id   Int?
  quotation     Quotation[]
}

model Quotation {
  id            Int @id @default(autoincrement())
  title         String
  detail        String
  dateQuote     String
  clients       Clients? @relation(fields: [clients_id], references: [id])
  clients_id    Int? @unique
  ItemsQuotation   ItemsQuotation[]
  file          File? @relation(fields: [file_id], references: [id])
  file_id       Int? @unique
}

model ItemsQuotation {
  id            Int @id @default(autoincrement())
  cant          Int
  total         Int
  quotation     Quotation? @relation(fields: [quotation_id], references: [id])
  quotation_id  Int? @unique
  prodServ      ProdServ? @relation(fields: [prodServ_id], references: [id])
  prodServ_id   Int? @unique
}

model ProdServ {
  id              Int @id @default(autoincrement())
  detail          String
  price           Int
  type            String
  itemsQuotation  ItemsQuotation[]
}

model File {
  id            Int @id @default(autoincrement())
  url           String
  typeFile      TypeFile? @relation(fields: [typeFile_id], references: [id])
  typeFile_id   Int?
  quotation     Quotation[]
}

model TypeFile {
  id            Int @id @default(autoincrement())
  name          String
  mime          String
  extension     String
  file          File[]
}